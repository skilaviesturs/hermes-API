"""Make database

Revision ID: f06c264861d2
Revises: 
Create Date: 2022-01-27 13:32:55.487922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f06c264861d2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logflag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), server_default='TRUE', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('computer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('dnsname', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('cpu', sa.String(), nullable=True),
    sa.Column('ram', sa.String(), nullable=True),
    sa.Column('ipv4', sa.String(), nullable=True),
    sa.Column('mac', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('owner_id', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owner.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dnsname'),
    sa.UniqueConstraint('ipv4'),
    sa.UniqueConstraint('mac'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_computer_id'), 'computer', ['id'], unique=False)
    op.create_table('disk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('free', sa.Integer(), nullable=False),
    sa.Column('disk_type', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id_computer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_computer'], ['computer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_time', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id_computer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_computer'], ['computer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id_logflag', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('id_computer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_computer'], ['computer.id'], ),
    sa.ForeignKeyConstraint(['id_logflag'], ['logflag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('software',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ident_number', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id_computer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_computer'], ['computer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('software')
    op.drop_table('log')
    op.drop_table('events')
    op.drop_table('disk')
    op.drop_index(op.f('ix_computer_id'), table_name='computer')
    op.drop_table('computer')
    op.drop_table('users')
    op.drop_table('owner')
    op.drop_table('logflag')
    # ### end Alembic commands ###
